generator client{
  provider="prisma-client-js"
}

datasource db{
  provider="postgresql"
  url=env("DATABASE_URL")
}

model User{
  id    String  @id @default(uuid())
  username  String @unique
  email String  @unique
  password String? 
  isGoogleUser Boolean @default(false)
  createdAt DateTime @default(now())
  streak   Int  @default(0)
  lastEntryDate DateTime?
  journalEntries Journal[]
  events Event[]
  responses PromptResponse[]
}

model Journal {
  id        String   @id @default(uuid())
  title     String
  content   String
  mood      String
  tags      String[] // make sure this is defined as a list
  isPrivate Boolean
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String
  user      User     @relation(fields: [userId], references: [id])

  promptId  String?
  prompt Prompt?  @relation(fields:[promptId],references:[id])
}


model Event{
  id  String @id @default(uuid())
  title   String
  tag   String
  eventDate DateTime
  userId  String
  user  User  @relation(fields:[userId],references:[id])
}

model Prompt{
  id  String  @id@default(uuid())
  question  String
  createdAt DateTime  @default(now())
  responses PromptResponse[]
  promptDate DateTime @unique

  journals Journal[]
}

model PromptResponse{
  id  String  @id@default(uuid())
  user User   @relation(fields:[userId],references:[id])
  userId  String

  prompt Prompt @relation(fields:[promptId],references:[id])
  promptId String

  answer  String
  createdAt DateTime  @default(now())
  updatedAt DateTime @updatedAt

   @@unique([userId, promptId])
}